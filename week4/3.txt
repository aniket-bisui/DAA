Q3) Given an unsorted array of integers, design an algorithm and implement it using a program to find Kth smallest or largest element in the array. (Worst case Time Complexity = O(n))
Input Format: The first line contains number of test cases, T. For each test case, there will be three input lines. First line contains n (the size of array). Second line contains space-separated integers describing array. Third line contains K.
Output Format: The output will have T number of lines. For each test case, output will be the Kth smallest or largest array element. If no Kth element is present, output should be “not present”.

#include<bits/stdc++.h>
using namespace std;
int main() {
    int t;
    cin>>t;
    while(t--) {
        int n;
        cin>>n;
        int *arr = new int[n];
        for(int i = 0; i < n; i++) {
            cin>>arr[i];
        }
        int k;
        cin>>k;
        priority_queue<int> pq;
        for(int i = 0; i < k; i++) {
            pq.push(arr[i]);
        }
        for(int i = k; i < n; i++) {
            pq.push(arr[i]);
            if(pq.size() > k) pq.pop();
        }
        if(pq.empty()) cout<<"Not present"<<endl;
        else cout<<pq.top()<<endl;
        delete []arr;
    }
}
